/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java_air.panel.reservation;

import java.awt.Label;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java_air.main.Customer;
import java_air.main.Global;
import org.sqlite.util.StringUtils;

/**
 *
 * @author Rui Zhang
 */
public class ReservationSinglePassengerPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReservationSinglePassengerPanel
     */
    public ReservationSinglePassengerPanel() {
        initComponents();
        textPrompt();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameText = new javax.swing.JTextField();
        lastNameText = new javax.swing.JTextField();
        generLabel = new javax.swing.JLabel();
        monthText = new javax.swing.JTextField();
        dayText = new javax.swing.JTextField();
        yearText = new javax.swing.JTextField();
        travelContactLabel = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        dateBirthLabel = new javax.swing.JLabel();
        mobileNumberText = new javax.swing.JTextField();
        emailText = new javax.swing.JTextField();
        travelerlLabel = new java.awt.Label();
        jSeparator1 = new javax.swing.JSeparator();
        passIDText = new javax.swing.JTextField();

        firstNameText.setFont(Global.normalFont);
        firstNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextActionPerformed(evt);
            }
        });

        lastNameText.setFont(Global.normalFont);
        lastNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextActionPerformed(evt);
            }
        });

        generLabel.setFont(Global.normalFont);
        generLabel.setForeground(new java.awt.Color(102, 102, 102));
        generLabel.setText("Gender*");

        monthText.setFont(Global.normalFont);
        monthText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthTextActionPerformed(evt);
            }
        });

        dayText.setFont(Global.normalFont);
        dayText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayTextActionPerformed(evt);
            }
        });

        yearText.setFont(Global.normalFont);
        yearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearTextActionPerformed(evt);
            }
        });

        travelContactLabel.setFont(Global.normalFont);
        travelContactLabel.setForeground(new java.awt.Color(102, 102, 102));
        travelContactLabel.setText("Travel contact information");

        maleRadioButton.setFont(Global.normalFont);
        maleRadioButton.setText("Male");
        maleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButtonActionPerformed(evt);
            }
        });

        femaleRadioButton.setFont(Global.normalFont);
        femaleRadioButton.setText("Female");
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });

        dateBirthLabel.setFont(Global.normalFont);
        dateBirthLabel.setForeground(new java.awt.Color(102, 102, 102));
        dateBirthLabel.setText("Date of birth*");

        mobileNumberText.setFont(Global.normalFont);
        mobileNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNumberTextActionPerformed(evt);
            }
        });

        emailText.setFont(Global.normalFont);
        emailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextActionPerformed(evt);
            }
        });

        travelerlLabel.setBackground(new java.awt.Color(204, 153, 0));
        travelerlLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        travelerlLabel.setForeground(new java.awt.Color(255, 255, 255));
        travelerlLabel.setText("label1");

        passIDText.setFont(Global.normalFont);
        passIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passIDTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(travelerlLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(monthText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dayText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(yearText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateBirthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(femaleRadioButton))
                            .addComponent(generLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mobileNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(travelContactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(passIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(travelerlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateBirthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maleRadioButton)
                    .addComponent(femaleRadioButton))
                .addGap(10, 10, 10)
                .addComponent(passIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(travelContactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextActionPerformed

    private void lastNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextActionPerformed

    private void monthTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthTextActionPerformed

    private void dayTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayTextActionPerformed

    private void yearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearTextActionPerformed

    private void maleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButtonActionPerformed
        genderInformation = "Male";
    }//GEN-LAST:event_maleRadioButtonActionPerformed

    private void mobileNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNumberTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNumberTextActionPerformed

    private void emailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextActionPerformed

    private void passIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passIDTextActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
       genderInformation = "Female";
    }//GEN-LAST:event_femaleRadioButtonActionPerformed
    
    public Label getTravelerLabel(){
        return travelerlLabel;
    }
    
    public String getGender() throws Exception{
        if(!femaleRadioButton.isSelected() && !maleRadioButton.isSelected()){
             throw new Exception("Gender is not selected.");
        }
        return(femaleRadioButton.isSelected() ? "Female" : "Male");
        //return genderInformation;
    }
    
    public String getFirstName() throws Exception{
        if(firstNameText.getText().isEmpty() || firstNameText.getText().matches(".*\\d.*")){
            throw new Exception("Invalid first name");
        }
        return firstNameText.getText();
    }
    
    public String getLastName() throws Exception{
        if(lastNameText.getText().isEmpty() || lastNameText.getText().matches(".*\\d.*")){
            throw new Exception("Invalid last name");
        }
        return lastNameText.getText();
    }
    
    public String getDateBirth() throws Exception{
        // Test the input of date is number.
        String dataBirthCheck = monthText.getText() + "-" + dayText.getText()
                                + "-" + yearText.getText();
        SimpleDateFormat format = new SimpleDateFormat("MM-dd-yyyy");
        try {
            
            format.setLenient(false);
            format.parse(dataBirthCheck.trim());
        } catch (Exception e) {
            throw new Exception("Invalid Passenger Date Of Birth.");}
        
        int year = Integer.parseInt(yearText.getText());  
        
        // Check the year is valid.
        Date mostYoungDate = new Date();
        // If the input date is after today, a error will be thrown.
        if(!format.parse(dataBirthCheck.trim()).before(mostYoungDate)){
            throw new Exception("Are you coming from Future? Invalid Date Of Birth.");
        }
        Date oldestDate = new Date(-1,11,29);
        if(!format.parse(dataBirthCheck.trim()).after(oldestDate)){
             throw new Exception("Invalid Passenger Date Of Birth.");
        }
        
        dataBirthInformation = monthText.getText() + "/" + dayText.getText()
                                + "/" + yearText.getText();
        return dataBirthInformation;
    }
    public String getPhoneNumber() throws Exception{
        if(!mobileNumberText.getText().matches("[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)")
                || mobileNumberText.getText().length() != 10){
            throw new Exception("Invalid Phone Number");
        }
        return mobileNumberText.getText();
    }
    
    public String getPassID(){
        
        return passIDText.getText();
    }
    public void checkEmail() throws Exception {
        String emailFormat = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        if(!emailText.getText().matches(emailFormat)){
            throw new Exception("Invalid Email");
        }
    }
    public void textPrompt(){
        new TextPrompt("First name*", firstNameText);
        new TextPrompt("Last name*", lastNameText);
        new TextPrompt("MM*", monthText);
        new TextPrompt("DD*", dayText);
        new TextPrompt("YYYY*", yearText);
        new TextPrompt("Mobile number", mobileNumberText);
        new TextPrompt("Email address", emailText);
        new TextPrompt("Know Traveler Number/PASS ID, 0 if Guest", passIDText);
    }
    
    public boolean hasEmptyFields(){
        return(firstNameText.getText().isEmpty()
                || lastNameText.getText().isEmpty()
                || monthText.getText().isEmpty()
                || dayText.getText().isEmpty()
                || yearText.getText().isEmpty()
                || mobileNumberText.getText().isEmpty()
                || emailText.getText().isEmpty()
                || passIDText.getText().isEmpty());
    }//end hasEmptyFields()
    
    public void loadCurrentCustomerInfo(){
        if(Global.currentCustomer != null){
            Customer c = Global.currentCustomer;
            firstNameText.setText(c.getFirstName());
            lastNameText.setText(c.getLastName());
            emailText.setText(c.getEmailAddress());
            mobileNumberText.setText(c.getPhoneNumber());
            maleRadioButton.setSelected(c.getGender().equals("Male"));
            femaleRadioButton.setSelected(c.getGender().equals("Female"));
            yearText.setText(c.getDateOfBirth().substring(0, 4));
            monthText.setText(c.getDateOfBirth().substring(5, 7));
            dayText.setText(c.getDateOfBirth().substring(8));
        }//end if
    }//end loadCurrentCustomerInfo()
    
    private String dataBirthInformation;
    private String genderInformation;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateBirthLabel;
    private javax.swing.JTextField dayText;
    private javax.swing.JTextField emailText;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JLabel generLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JTextField mobileNumberText;
    private javax.swing.JTextField monthText;
    private javax.swing.JTextField passIDText;
    private javax.swing.JLabel travelContactLabel;
    private java.awt.Label travelerlLabel;
    private javax.swing.JTextField yearText;
    // End of variables declaration//GEN-END:variables


}
